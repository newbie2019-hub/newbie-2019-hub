[{"data":1,"prerenderedAt":938},["Reactive",2],{"content-query-0IjfY7MvWi":3},[4,618,888,905,920],{"_path":5,"_dir":6,"_draft":7,"_partial":7,"_locale":6,"_empty":7,"title":8,"description":9,"date":10,"preview":11,"draft":12,"tags":13,"categories":17,"body":18,"_type":613,"_id":614,"_source":615,"_file":616,"_extension":617},"/2023-05-30-vscodesnippets","",false,"VSCode Snippets","Enhance your productivity with the power of VSCode Snippets","March 31, 2023 @ 11:30 PM","/img/snippets-preview-pixabay.png",true,[14,15,16],"vscode","tips and tricks","snippets",[14],{"type":19,"children":20,"toc":609},"root",[21,30,36,41,47,66,74,79,86,98,106,351,359,538,564,576,588,604],{"type":22,"tag":23,"props":24,"children":26},"element","h2",{"id":25},"supercharge-your-productivity-with-vscode-snippets",[27],{"type":28,"value":29},"text","Supercharge your Productivity with VSCode Snippets",{"type":22,"tag":31,"props":32,"children":33},"p",{},[34],{"type":28,"value":35},"Hi there! Have you tried utilizing Visual Studio Code (VSCode) snippets? If not, aren't you tired of rewriting the common code structures or patterns, such as loops, conditionals, function declarations, and any boilerplate for your code? As developers, we often find ourselves do this, right? Isn't it time consuming and error prone? If yes then let me guide you on how you can use Visual Studio Code (VSCode) snippets.",{"type":22,"tag":31,"props":37,"children":38},{},[39],{"type":28,"value":40},"Before we begin let me just tell you that there are lots of extensions from the VSCode Marketplace which includes snippets. However you can easily define your own snippets without any extensions by following the guide below.",{"type":22,"tag":23,"props":42,"children":44},{"id":43},"vscode-snippet-usage",[45],{"type":28,"value":46},"VSCode Snippet Usage",{"type":22,"tag":31,"props":48,"children":49},{},[50,52,58,60],{"type":28,"value":51},"To create your own snippets you can press ",{"type":22,"tag":53,"props":54,"children":55},"kbd",{},[56],{"type":28,"value":57},"Ctrl + P",{"type":28,"value":59}," and then type and select ",{"type":22,"tag":61,"props":62,"children":63},"code-inline",{},[64],{"type":28,"value":65},">Snippets: Configure User Snippets",{"type":22,"tag":31,"props":67,"children":68},{},[69],{"type":22,"tag":70,"props":71,"children":73},"img",{"alt":6,"src":72},"/img/SelectCommand.png",[],{"type":22,"tag":31,"props":75,"children":76},{},[77],{"type":28,"value":78},"Then it will prompt you to either select a snippet file or create a new one. You can create different snippet file for your different uses (e.g., javascript, php, ruby, c, c++, vue, react, etc.,).",{"type":22,"tag":31,"props":80,"children":81},{},[82],{"type":22,"tag":70,"props":83,"children":85},{"alt":6,"src":84},"/img/SnippetCreate.png",[],{"type":22,"tag":31,"props":87,"children":88},{},[89,91,96],{"type":28,"value":90},"To create a new snippet select the ",{"type":22,"tag":61,"props":92,"children":93},{},[94],{"type":28,"value":95},"New Global Snippet File",{"type":28,"value":97}," and type in a name for your snippet. For this demo I will be naming it as demo-snippet. You will see a similar content for the created file. We can clean up and comment out the example from the generated file to test on how snippets work. See the Generated File and After Changes screenshot from below.",{"type":22,"tag":31,"props":99,"children":100},{},[101],{"type":22,"tag":61,"props":102,"children":103},{},[104],{"type":28,"value":105},"Generated File",{"type":22,"tag":107,"props":108,"children":112},"code",{"code":109,"language":110,"meta":111},"{\n    // Place your global snippets here. Each snippet is defined under a snippet name and has a scope, prefix, body and \n    // description. Add comma separated ids of the languages where the snippet is applicable in the scope field. If scope \n    // is left empty or omitted, the snippet gets applied to all languages. The prefix is what is \n    // used to trigger the snippet and the body will be expanded and inserted. Possible variables are: \n    // $1, $2 for tab stops, $0 for the final cursor position, and ${1:label}, ${2:another} for placeholders. \n    // Placeholders with the same ids are connected.\n    // Example:\n    // \"Print to console\": {\n    //  \"scope\": \"javascript,typescript\",\n    //  \"prefix\": \"log\",\n    //  \"body\": [\n    //      \"console.log('$1');\",\n    //      \"$2\"\n    //  ],\n    //  \"description\": \"Log output to console\"\n    // }\n}\n","json",null,[113],{"type":22,"tag":114,"props":115,"children":116},"pre",{},[117],{"type":22,"tag":107,"props":118,"children":119},{"__ignoreMap":6},[120,132,147,160,173,186,199,212,225,238,251,264,277,290,303,316,329,342],{"type":22,"tag":121,"props":122,"children":125},"span",{"class":123,"line":124},"line",1,[126],{"type":22,"tag":121,"props":127,"children":129},{"class":128},"ct-74c1e9",[130],{"type":28,"value":131},"{\n",{"type":22,"tag":121,"props":133,"children":135},{"class":123,"line":134},2,[136,141],{"type":22,"tag":121,"props":137,"children":138},{"class":128},[139],{"type":28,"value":140},"    ",{"type":22,"tag":121,"props":142,"children":144},{"class":143},"ct-d466de",[145],{"type":28,"value":146},"// Place your global snippets here. Each snippet is defined under a snippet name and has a scope, prefix, body and \n",{"type":22,"tag":121,"props":148,"children":150},{"class":123,"line":149},3,[151,155],{"type":22,"tag":121,"props":152,"children":153},{"class":128},[154],{"type":28,"value":140},{"type":22,"tag":121,"props":156,"children":157},{"class":143},[158],{"type":28,"value":159},"// description. Add comma separated ids of the languages where the snippet is applicable in the scope field. If scope \n",{"type":22,"tag":121,"props":161,"children":163},{"class":123,"line":162},4,[164,168],{"type":22,"tag":121,"props":165,"children":166},{"class":128},[167],{"type":28,"value":140},{"type":22,"tag":121,"props":169,"children":170},{"class":143},[171],{"type":28,"value":172},"// is left empty or omitted, the snippet gets applied to all languages. The prefix is what is \n",{"type":22,"tag":121,"props":174,"children":176},{"class":123,"line":175},5,[177,181],{"type":22,"tag":121,"props":178,"children":179},{"class":128},[180],{"type":28,"value":140},{"type":22,"tag":121,"props":182,"children":183},{"class":143},[184],{"type":28,"value":185},"// used to trigger the snippet and the body will be expanded and inserted. Possible variables are: \n",{"type":22,"tag":121,"props":187,"children":189},{"class":123,"line":188},6,[190,194],{"type":22,"tag":121,"props":191,"children":192},{"class":128},[193],{"type":28,"value":140},{"type":22,"tag":121,"props":195,"children":196},{"class":143},[197],{"type":28,"value":198},"// $1, $2 for tab stops, $0 for the final cursor position, and ${1:label}, ${2:another} for placeholders. \n",{"type":22,"tag":121,"props":200,"children":202},{"class":123,"line":201},7,[203,207],{"type":22,"tag":121,"props":204,"children":205},{"class":128},[206],{"type":28,"value":140},{"type":22,"tag":121,"props":208,"children":209},{"class":143},[210],{"type":28,"value":211},"// Placeholders with the same ids are connected.\n",{"type":22,"tag":121,"props":213,"children":215},{"class":123,"line":214},8,[216,220],{"type":22,"tag":121,"props":217,"children":218},{"class":128},[219],{"type":28,"value":140},{"type":22,"tag":121,"props":221,"children":222},{"class":143},[223],{"type":28,"value":224},"// Example:\n",{"type":22,"tag":121,"props":226,"children":228},{"class":123,"line":227},9,[229,233],{"type":22,"tag":121,"props":230,"children":231},{"class":128},[232],{"type":28,"value":140},{"type":22,"tag":121,"props":234,"children":235},{"class":143},[236],{"type":28,"value":237},"// \"Print to console\": {\n",{"type":22,"tag":121,"props":239,"children":241},{"class":123,"line":240},10,[242,246],{"type":22,"tag":121,"props":243,"children":244},{"class":128},[245],{"type":28,"value":140},{"type":22,"tag":121,"props":247,"children":248},{"class":143},[249],{"type":28,"value":250},"//  \"scope\": \"javascript,typescript\",\n",{"type":22,"tag":121,"props":252,"children":254},{"class":123,"line":253},11,[255,259],{"type":22,"tag":121,"props":256,"children":257},{"class":128},[258],{"type":28,"value":140},{"type":22,"tag":121,"props":260,"children":261},{"class":143},[262],{"type":28,"value":263},"//  \"prefix\": \"log\",\n",{"type":22,"tag":121,"props":265,"children":267},{"class":123,"line":266},12,[268,272],{"type":22,"tag":121,"props":269,"children":270},{"class":128},[271],{"type":28,"value":140},{"type":22,"tag":121,"props":273,"children":274},{"class":143},[275],{"type":28,"value":276},"//  \"body\": [\n",{"type":22,"tag":121,"props":278,"children":280},{"class":123,"line":279},13,[281,285],{"type":22,"tag":121,"props":282,"children":283},{"class":128},[284],{"type":28,"value":140},{"type":22,"tag":121,"props":286,"children":287},{"class":143},[288],{"type":28,"value":289},"//      \"console.log('$1');\",\n",{"type":22,"tag":121,"props":291,"children":293},{"class":123,"line":292},14,[294,298],{"type":22,"tag":121,"props":295,"children":296},{"class":128},[297],{"type":28,"value":140},{"type":22,"tag":121,"props":299,"children":300},{"class":143},[301],{"type":28,"value":302},"//      \"$2\"\n",{"type":22,"tag":121,"props":304,"children":306},{"class":123,"line":305},15,[307,311],{"type":22,"tag":121,"props":308,"children":309},{"class":128},[310],{"type":28,"value":140},{"type":22,"tag":121,"props":312,"children":313},{"class":143},[314],{"type":28,"value":315},"//  ],\n",{"type":22,"tag":121,"props":317,"children":319},{"class":123,"line":318},16,[320,324],{"type":22,"tag":121,"props":321,"children":322},{"class":128},[323],{"type":28,"value":140},{"type":22,"tag":121,"props":325,"children":326},{"class":143},[327],{"type":28,"value":328},"//  \"description\": \"Log output to console\"\n",{"type":22,"tag":121,"props":330,"children":332},{"class":123,"line":331},17,[333,337],{"type":22,"tag":121,"props":334,"children":335},{"class":128},[336],{"type":28,"value":140},{"type":22,"tag":121,"props":338,"children":339},{"class":143},[340],{"type":28,"value":341},"// }\n",{"type":22,"tag":121,"props":343,"children":345},{"class":123,"line":344},18,[346],{"type":22,"tag":121,"props":347,"children":348},{"class":128},[349],{"type":28,"value":350},"}",{"type":22,"tag":31,"props":352,"children":353},{},[354],{"type":22,"tag":61,"props":355,"children":356},{},[357],{"type":28,"value":358},"After Changes",{"type":22,"tag":107,"props":360,"children":362},{"code":361,"language":110,"meta":111},"{\n    \"Print to console\": {\n        \"scope\": \"javascript,typescript\",\n        \"prefix\": \"log\",\n        \"body\": [\n            \"console.log('$1');\",\n            \"$2\"\n        ],\n        \"description\": \"Log output to console\"\n    }\n}\n",[363],{"type":22,"tag":114,"props":364,"children":365},{},[366],{"type":22,"tag":107,"props":367,"children":368},{"__ignoreMap":6},[369,376,394,423,448,465,482,494,502,523,531],{"type":22,"tag":121,"props":370,"children":371},{"class":123,"line":124},[372],{"type":22,"tag":121,"props":373,"children":374},{"class":128},[375],{"type":28,"value":131},{"type":22,"tag":121,"props":377,"children":378},{"class":123,"line":134},[379,383,389],{"type":22,"tag":121,"props":380,"children":381},{"class":128},[382],{"type":28,"value":140},{"type":22,"tag":121,"props":384,"children":386},{"class":385},"ct-e0146a",[387],{"type":28,"value":388},"\"Print to console\"",{"type":22,"tag":121,"props":390,"children":391},{"class":128},[392],{"type":28,"value":393},": {\n",{"type":22,"tag":121,"props":395,"children":396},{"class":123,"line":149},[397,402,407,412,418],{"type":22,"tag":121,"props":398,"children":399},{"class":128},[400],{"type":28,"value":401},"        ",{"type":22,"tag":121,"props":403,"children":404},{"class":385},[405],{"type":28,"value":406},"\"scope\"",{"type":22,"tag":121,"props":408,"children":409},{"class":128},[410],{"type":28,"value":411},": ",{"type":22,"tag":121,"props":413,"children":415},{"class":414},"ct-ebfa6d",[416],{"type":28,"value":417},"\"javascript,typescript\"",{"type":22,"tag":121,"props":419,"children":420},{"class":128},[421],{"type":28,"value":422},",\n",{"type":22,"tag":121,"props":424,"children":425},{"class":123,"line":162},[426,430,435,439,444],{"type":22,"tag":121,"props":427,"children":428},{"class":128},[429],{"type":28,"value":401},{"type":22,"tag":121,"props":431,"children":432},{"class":385},[433],{"type":28,"value":434},"\"prefix\"",{"type":22,"tag":121,"props":436,"children":437},{"class":128},[438],{"type":28,"value":411},{"type":22,"tag":121,"props":440,"children":441},{"class":414},[442],{"type":28,"value":443},"\"log\"",{"type":22,"tag":121,"props":445,"children":446},{"class":128},[447],{"type":28,"value":422},{"type":22,"tag":121,"props":449,"children":450},{"class":123,"line":175},[451,455,460],{"type":22,"tag":121,"props":452,"children":453},{"class":128},[454],{"type":28,"value":401},{"type":22,"tag":121,"props":456,"children":457},{"class":385},[458],{"type":28,"value":459},"\"body\"",{"type":22,"tag":121,"props":461,"children":462},{"class":128},[463],{"type":28,"value":464},": [\n",{"type":22,"tag":121,"props":466,"children":467},{"class":123,"line":188},[468,473,478],{"type":22,"tag":121,"props":469,"children":470},{"class":128},[471],{"type":28,"value":472},"            ",{"type":22,"tag":121,"props":474,"children":475},{"class":414},[476],{"type":28,"value":477},"\"console.log('$1');\"",{"type":22,"tag":121,"props":479,"children":480},{"class":128},[481],{"type":28,"value":422},{"type":22,"tag":121,"props":483,"children":484},{"class":123,"line":201},[485,489],{"type":22,"tag":121,"props":486,"children":487},{"class":128},[488],{"type":28,"value":472},{"type":22,"tag":121,"props":490,"children":491},{"class":414},[492],{"type":28,"value":493},"\"$2\"\n",{"type":22,"tag":121,"props":495,"children":496},{"class":123,"line":214},[497],{"type":22,"tag":121,"props":498,"children":499},{"class":128},[500],{"type":28,"value":501},"        ],\n",{"type":22,"tag":121,"props":503,"children":504},{"class":123,"line":227},[505,509,514,518],{"type":22,"tag":121,"props":506,"children":507},{"class":128},[508],{"type":28,"value":401},{"type":22,"tag":121,"props":510,"children":511},{"class":385},[512],{"type":28,"value":513},"\"description\"",{"type":22,"tag":121,"props":515,"children":516},{"class":128},[517],{"type":28,"value":411},{"type":22,"tag":121,"props":519,"children":520},{"class":414},[521],{"type":28,"value":522},"\"Log output to console\"\n",{"type":22,"tag":121,"props":524,"children":525},{"class":123,"line":240},[526],{"type":22,"tag":121,"props":527,"children":528},{"class":128},[529],{"type":28,"value":530},"    }\n",{"type":22,"tag":121,"props":532,"children":533},{"class":123,"line":253},[534],{"type":22,"tag":121,"props":535,"children":536},{"class":128},[537],{"type":28,"value":350},{"type":22,"tag":31,"props":539,"children":540},{},[541,543,548,550,555,557,562],{"type":28,"value":542},"After saving the file, open any javascript or typescript file based on the scope of the snippet that we created previously. You may type in the prefix on the opened file and select from the snippets or suggestions that will appear by pressing ",{"type":22,"tag":53,"props":544,"children":545},{},[546],{"type":28,"value":547},"Enter",{"type":28,"value":549}," or ",{"type":22,"tag":53,"props":551,"children":552},{},[553],{"type":28,"value":554},"Tab",{"type":28,"value":556},". If there are no snippets or suggestions shown you may hit the ",{"type":22,"tag":53,"props":558,"children":559},{},[560],{"type":28,"value":561},"ctrl + spacebar",{"type":28,"value":563}," on your keyboard to show the suggestions.",{"type":22,"tag":31,"props":565,"children":566},{},[567,572],{"type":22,"tag":61,"props":568,"children":569},{},[570],{"type":28,"value":571},"Snippet Suggestions",{"type":22,"tag":70,"props":573,"children":575},{"alt":6,"src":574},"/img/snippet-suggestions.png",[],{"type":22,"tag":31,"props":577,"children":578},{},[579,584],{"type":22,"tag":61,"props":580,"children":581},{},[582],{"type":28,"value":583},"Snippet Selected",{"type":22,"tag":70,"props":585,"children":587},{"alt":6,"src":586},"/img/snippet-selected.png",[],{"type":22,"tag":31,"props":589,"children":590},{},[591,593,602],{"type":28,"value":592},"Now that you've learned how VSCode Snippets work, you can create your own snippets for whatever use case you can think of just like for any specific framework (e.g., react, vue, svelete, astro, etc.,). You can read more about VSCode Snippet from there official site or you can ",{"type":22,"tag":594,"props":595,"children":599},"a",{"href":596,"rel":597},"https://code.visualstudio.com/docs/editor/userdefinedsnippets",[598],"nofollow",[600],{"type":28,"value":601},"click here",{"type":28,"value":603},".",{"type":22,"tag":605,"children":606},"style",[607],{"type":28,"value":608},".ct-ebfa6d{color:#A5D6FF}\n.ct-e0146a{color:#7EE787}\n.ct-d466de{color:#8B949E}\n.ct-74c1e9{color:#C9D1D9}",{"title":6,"searchDepth":134,"depth":134,"links":610},[611,612],{"id":25,"depth":134,"text":29},{"id":43,"depth":134,"text":46},"markdown","content:2023-05-30-vscodesnippets.md","content","2023-05-30-vscodesnippets.md","md",{"_path":619,"_dir":6,"_draft":7,"_partial":7,"_locale":6,"_empty":7,"title":620,"description":621,"date":622,"preview":623,"draft":12,"tags":624,"categories":627,"body":628,"_type":613,"_id":886,"_source":615,"_file":887,"_extension":617},"/2023-06-01-figma-text-styles","Creating Text Styles in Figma","Let us explore on how can we create text styles easily using Figma","June 01, 2023 @ 08:30 AM","/img/figma-cover.png",[625,626,15],"figma","text style",[],{"type":19,"children":629,"toc":880},[630,636,643,670,675,680,689,709,716,731,738,774,781,789,796,838,849,854,861,872],{"type":22,"tag":23,"props":631,"children":633},{"id":632},"figma-text-style",[634],{"type":28,"value":635},"Figma Text Style",{"type":22,"tag":637,"props":638,"children":640},"h3",{"id":639},"table-of-contents",[641],{"type":28,"value":642},"Table of Contents",{"type":22,"tag":644,"props":645,"children":646},"ol",{},[647,659],{"type":22,"tag":648,"props":649,"children":650},"li",{},[651,653],{"type":28,"value":652},"1.) ",{"type":22,"tag":594,"props":654,"children":656},{"href":655},"#manually-create-text-style",[657],{"type":28,"value":658},"Manually Create Text Style",{"type":22,"tag":648,"props":660,"children":661},{},[662,664],{"type":28,"value":663},"2.) ",{"type":22,"tag":594,"props":665,"children":667},{"href":666},"#typestyle-plugin",[668],{"type":28,"value":669},"Typestyles Plugin",{"type":22,"tag":23,"props":671,"children":673},{"id":672},"manually-create-text-style",[674],{"type":28,"value":658},{"type":22,"tag":31,"props":676,"children":677},{},[678],{"type":28,"value":679},"Using Text Style functionality will help us apply repeated collection of\nproperties (line height, font weight, size) to text object in Figma. We're gonna\nlearn first on how can we create text style in Figma without any plugins.",{"type":22,"tag":31,"props":681,"children":682},{},[683],{"type":22,"tag":684,"props":685,"children":686},"strong",{},[687],{"type":28,"value":688},"To get started, create a new Figma file and follow the steps below",{"type":22,"tag":644,"props":690,"children":691},{},[692,704],{"type":22,"tag":648,"props":693,"children":694},{},[695,697,702],{"type":28,"value":696},"Add Frame by pressing ",{"type":22,"tag":53,"props":698,"children":699},{},[700],{"type":28,"value":701},"F",{"type":28,"value":703}," on your keyboard",{"type":22,"tag":648,"props":705,"children":706},{},[707],{"type":28,"value":708},"or click the frame icon beside the pointer icon from the menu options and then select from the options on the right side that are available. For this tutorial I will be selecting the Desktop 1440 x 1024.",{"type":22,"tag":31,"props":710,"children":711},{},[712],{"type":22,"tag":70,"props":713,"children":715},{"alt":6,"src":714},"/img/TextStyle/BlankCanvas.png",[],{"type":22,"tag":644,"props":717,"children":718},{"start":149},[719],{"type":22,"tag":648,"props":720,"children":721},{},[722,724,729],{"type":28,"value":723},"Add a text by pressing ",{"type":22,"tag":53,"props":725,"children":726},{},[727],{"type":28,"value":728},"T",{"type":28,"value":730}," on your keyboard or from the text icon on the menu options. You can type in any text that you want. Set the font size to 16 and font weight to Regular.",{"type":22,"tag":31,"props":732,"children":733},{},[734],{"type":22,"tag":70,"props":735,"children":737},{"alt":6,"src":736},"/img/TextStyle/Step1.png",[],{"type":22,"tag":644,"props":739,"children":740},{"start":162},[741],{"type":22,"tag":648,"props":742,"children":743},{},[744,746,751,753,758,760,765,767,772],{"type":28,"value":745},"Duplicate this text three times for this tutorial. To duplicate you can hold ",{"type":22,"tag":53,"props":747,"children":748},{},[749],{"type":28,"value":750},"Shift + Alt",{"type":28,"value":752}," on your keyboard then click and drag the text below. Then you can simply press ",{"type":22,"tag":53,"props":754,"children":755},{},[756],{"type":28,"value":757},"Ctrl + D",{"type":28,"value":759}," to repeat the copy. Modify the weight property of the second text and change it into ",{"type":22,"tag":61,"props":761,"children":762},{},[763],{"type":28,"value":764},"Medium",{"type":28,"value":766}," and ",{"type":22,"tag":61,"props":768,"children":769},{},[770],{"type":28,"value":771},"Bold",{"type":28,"value":773}," for the third text.",{"type":22,"tag":31,"props":775,"children":776},{},[777],{"type":22,"tag":70,"props":778,"children":780},{"alt":6,"src":779},"/img/TextStyle/Step2.png",[],{"type":22,"tag":644,"props":782,"children":783},{"start":175},[784],{"type":22,"tag":648,"props":785,"children":786},{},[787],{"type":28,"value":788},"Select the first text that you've created and on the right side click the four dot icon on the Text (located below the Layer section)",{"type":22,"tag":31,"props":790,"children":791},{},[792],{"type":22,"tag":70,"props":793,"children":795},{"alt":6,"src":794},"/img/TextStyle/Step3.png",[],{"type":22,"tag":644,"props":797,"children":798},{"start":188},[799],{"type":22,"tag":648,"props":800,"children":801},{},[802,804,809,811,816,818,823,825,830,832,837],{"type":28,"value":803},"Now type in the name ",{"type":22,"tag":61,"props":805,"children":806},{},[807],{"type":28,"value":808},"Base/Regular",{"type":28,"value":810}," we named it with this format because this will automatically group our text styles based on the first Text which is the ",{"type":22,"tag":61,"props":812,"children":813},{},[814],{"type":28,"value":815},"Base",{"type":28,"value":817},". We also added a ",{"type":22,"tag":61,"props":819,"children":820},{},[821],{"type":28,"value":822},"Regular",{"type":28,"value":824}," because our font weight is Regular. Now repeat the process and for the second text name it as ",{"type":22,"tag":61,"props":826,"children":827},{},[828],{"type":28,"value":829},"Base/Medium",{"type":28,"value":831}," and the third text as ",{"type":22,"tag":61,"props":833,"children":834},{},[835],{"type":28,"value":836},"Base/Bold",{"type":28,"value":603},{"type":22,"tag":31,"props":839,"children":840},{},[841,845],{"type":22,"tag":70,"props":842,"children":844},{"alt":6,"src":843},"/img/TextStyle/Step5.png",[],{"type":22,"tag":70,"props":846,"children":848},{"alt":6,"src":847},"/img/TextStyle/Step6.png",[],{"type":22,"tag":31,"props":850,"children":851},{},[852],{"type":28,"value":853},"Now you can click on the blank space on the canvas to see the Local styles which has our Text styles.",{"type":22,"tag":31,"props":855,"children":856},{},[857],{"type":22,"tag":70,"props":858,"children":860},{"alt":6,"src":859},"/img/TextStyle/TextStyles.png",[],{"type":22,"tag":31,"props":862,"children":863},{},[864,866,870],{"type":28,"value":865},"To use the text styles you can add a new text by pressing ",{"type":22,"tag":53,"props":867,"children":868},{},[869],{"type":28,"value":728},{"type":28,"value":871}," on your keyboard and type in any text that you want and select the four square dot icon on the Text from the right side panel. Simply select from any of the text style that you created and it will apply the properties that you have set.",{"type":22,"tag":31,"props":873,"children":874},{},[875,879],{"type":22,"tag":70,"props":876,"children":878},{"alt":6,"src":877},"/img/TextStyle/SelectingTextStyle.png",[],{"type":28,"value":603},{"title":6,"searchDepth":134,"depth":134,"links":881},[882,885],{"id":632,"depth":134,"text":635,"children":883},[884],{"id":639,"depth":149,"text":642},{"id":672,"depth":134,"text":658},"content:2023-06-01-figma-text-styles.md","2023-06-01-figma-text-styles.md",{"_path":889,"_dir":6,"_draft":7,"_partial":7,"_locale":6,"_empty":12,"title":890,"description":891,"date":892,"preview":893,"draft":12,"tags":894,"categories":898,"body":899,"_type":613,"_id":903,"_source":615,"_file":904,"_extension":617},"/2023-06-01-laravel-stylize-terminal","Terminal Secrets - Laravel","Customize the appearance of the terminal for your console commands","June 02, 2023 @ 08:35 AM","/img/artisan-console.jpg",[895,896,897,15],"laravel","terminal","colors",[895],{"type":19,"children":900,"toc":901},[],{"title":6,"searchDepth":134,"depth":134,"links":902},[],"content:2023-06-01-laravel-stylize-terminal.md","2023-06-01-laravel-stylize-terminal.md",{"_path":906,"_dir":6,"_draft":7,"_partial":7,"_locale":6,"_empty":12,"title":907,"description":908,"date":909,"preview":910,"draft":12,"tags":911,"categories":913,"body":914,"_type":613,"_id":918,"_source":615,"_file":919,"_extension":617},"/2023-06-02-enums-laravel","Laravel Enums","Let us learn how enums work in Laravel to provide more readability in our code","June 03, 2023 @ 10:00 AM","/img/laravel-cover.png",[895,912,15],"enums",[895],{"type":19,"children":915,"toc":916},[],{"title":6,"searchDepth":134,"depth":134,"links":917},[],"content:2023-06-02-enums-laravel.md","2023-06-02-enums-laravel.md",{"_path":921,"_dir":6,"_draft":7,"_partial":7,"_locale":6,"_empty":12,"title":922,"description":923,"date":924,"preview":925,"draft":12,"tags":926,"categories":930,"body":932,"_type":613,"_id":936,"_source":615,"_file":937,"_extension":617},"/2023-06-02-portfolio-using-nuxt-and-github","Deploy Nuxt in GitHub Pages","Let us explore on how can we deploy our Nuxt Portfolio on Github Pages","June 04, 2023 @ 08:00 AM","/img/github-pages.png",[927,928,929],"githubpages","nuxt","portfolio",[931],"Nuxt",{"type":19,"children":933,"toc":934},[],{"title":6,"searchDepth":134,"depth":134,"links":935},[],"content:2023-06-02-portfolio-using-nuxt-and-github.md","2023-06-02-portfolio-using-nuxt-and-github.md",1686119028921]